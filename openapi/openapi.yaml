openapi: 3.0.3
info:
  title: Science Index API
  version: 0.1.0
  description: >
    Minimal OpenAPI/JSON:API scaffold for Science Index.
    Conforms to JSON:API (https://jsonapi.org/) where responses are wrapped in a top-level `data` object.

servers:
  - url: https://api.scienceindex.local/v1

paths:
  /topics:
    get:
      summary: List topics
      responses:
        '200':
          description: JSON:API collection of Topic
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'
              examples:
                example:
                  value:
                    data:
                      - type: topic
                        id: "32d59757-908b-44ec-ba33-155f317ec156"
                        attributes:
                          name: "Do vaccines cause autism?"
                          domain: "health"
                          description: "Causation claim between vaccines/ingredients and autism"
                          status: "active"
                          impact_weight: 1.0
                        relationships:
                          claim_space:
                            data: { type: claim_space, id: "bf396bbc-3145-4c44-87f2-bc9755b53e4d" }
  /topics/{id}:
    get:
      summary: Get a topic
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Topic resource
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'
  /claim-spaces:
    get:
      summary: List claim spaces
      responses:
        '200':
          description: JSON:API collection of ClaimSpace
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'

  /consensus-priors:
    get:
      summary: List consensus priors
      parameters:
        - in: query
          name: topic_id
          schema: { type: string }
        - in: query
          name: as_of
          schema: { type: string, format: date }
      responses:
        '200':
          description: JSON:API collection of ConsensusPrior
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'

  /candidates:
    get:
      summary: List candidates
      responses:
        '200':
          description: JSON:API collection of Candidate
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'

  /stance-estimates:
    get:
      summary: List stance estimates (windowed)
      parameters:
        - in: query
          name: candidate_id
          schema: { type: string }
        - in: query
          name: topic_id
          schema: { type: string }
      responses:
        '200':
          description: JSON:API collection of StanceEstimate
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'

  /score-snapshots:
    get:
      summary: List alignment/waffling scores
      parameters:
        - in: query
          name: candidate_id
          schema: { type: string }
        - in: query
          name: topic_id
          schema: { type: string }
      responses:
        '200':
          description: JSON:API collection of ScoreSnapshot
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonApiDocument'

components:
  schemas:
    JsonApiResourceId:
      type: object
      required: [type, id]
      properties:
        type: { type: string }
        id: { type: string }
    JsonApiRelationship:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/JsonApiResourceId'
            - type: array
              items: { $ref: '#/components/schemas/JsonApiResourceId' }
    JsonApiDocument:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/JsonApiResource'
            - type: array
              items: { $ref: '#/components/schemas/JsonApiResource' }
        included:
          type: array
          items: { $ref: '#/components/schemas/JsonApiResource' }
        meta:
          type: object
        links:
          type: object
    JsonApiResource:
      type: object
      required: [type, id, attributes]
      properties:
        type: { type: string }
        id: { type: string }
        attributes: { type: object }
        relationships:
          type: object
          additionalProperties: { $ref: '#/components/schemas/JsonApiRelationship' }

    Topic:
      type: object
      properties:
        name: { type: string }
        domain: { type: string, enum: [health, climate, other] }
        description: { type: string }
        claim_space_id: { type: string }
        status: { type: string, enum: [draft, active, deprecated] }
        impact_weight: { type: number }
        tags: { type: array, items: { type: string } }
    ClaimSpace:
      type: object
      properties:
        name: { type: string }
        measurement_type: { type: string, enum: [categorical, ordinal] }
        states:
          type: array
          items:
            type: object
            required: [id, label]
            properties:
              id: { type: string }
              label: { type: string }
              definition: { type: string }
              order: { type: integer }
              polarity: { type: string, enum: [consensus, counter, neutral] }

    ConsensusPrior:
      type: object
      properties:
        topic_id: { type: string }
        claim_space_id: { type: string }
        as_of: { type: string, format: date }
        dirichlet_alpha:
          type: array
          items: { type: number }
        consensus_clarity: { type: number }
        evidence_summary: { type: string }
        method_version: { type: string }

    Candidate:
      type: object
      properties:
        name: { type: string }
        role: { type: string }
        cycle: { type: string }

    StanceEstimate:
      type: object
      properties:
        candidate_id: { type: string }
        topic_id: { type: string }
        window_start: { type: string, format: date }
        window_end: { type: string, format: date }
        dirichlet_beta:
          type: array
          items: { type: number }
        probabilities:
          type: array
          items: { type: number }
        effective_sample_size: { type: number }
        n_units: { type: integer }
        data_sufficiency: { type: string, enum: [insufficient, low, adequate, strong] }
        method_version: { type: string }

    ScoreSnapshot:
      type: object
      properties:
        candidate_id: { type: string }
        topic_id: { type: string }
        as_of: { type: string, format: date }
        alignment_score: { type: number }
        ci_low: { type: number }
        ci_high: { type: number }
        overlap_metric: { type: string, enum: [overlap, 1_minus_TVD] }
        distance_metrics:
          type: object
          properties:
            js_divergence: { type: number }
            hellinger: { type: number }
        consensus_clarity: { type: number }
        data_sufficiency_flag: { type: boolean }
        waffling_score: { type: number }
        waffling_window_days: { type: integer }
